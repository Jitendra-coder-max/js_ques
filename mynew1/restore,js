
const Numrepeat = (str,n) => {

// let newStr = ' '
//     for(let i = 1; i<=n; i++){
//         newStr = newStr+ str
//     }
// return newStr;

return  n>0 ? str.repeat(n): str;

}

console.log(Numrepeat('abc',5))






const truncFunc = (str,num) => {
    // let newStr='';
    // for(let i =0; i<num; i++){
    //     newStr += str[i]

    // }
    // return newStr;

    return  str.slice(0,num)

}


console.log(truncFunc('hello my name is jit',8))


// ......AbortController.apply.apply.




function numRange(a,b){
    let arr =[]
        for(let i = a; i<=b; i++ ){
            arr.push(i)
        }
    return arr;
    
    
    }
    
    console.log(numRange(0,5))







    ///////////////////////
    





const hexColor= () =>{


    let num = Math.random().toString(16).slice(2,8).padEnd(6,0);
    return '#'+num;
 }
 
 
 console.log(hexColor())

 <!-- <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <button onclick="hexColor()">click here</button>
    <p id="para">
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
      est laborum.
    </p>
    <script>
      function hexColor() {
        let hexColor = Math.random().toString(16).slice(2, 8).padEnd(6, 0);
        console.log(hexColor);
        document.getElementById("para").style.backgroundColor = "#" + hexColor;
      }
    </script>
  </body>
</html> -->
<!-- ////////////////////////////////////////////////////////////////////////////// -->


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <button id ='btn'>click here</button>
    <p id="para">
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
      est laborum.
    </p>
    <script>
      
  const btnEl =   document.getElementById('btn');

      btnEl.addEventListener('click',hexColor)

      function hexColor(){

      let hexVal =  Math.random().toString(16).slice(2,8).padEnd(6,0);
      document.querySelector('#para').style.color = '#'+hexVal
    
      }



    </script>
  </body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    
    <button onclick="btnClick()"> Click here</button>

    <script>
        function btnClick(){
            let arr = [1,2,3,4,5]
        }
    </script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

    <p id="para">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
        cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id
        est laborum.
      </p>
    
</body>


<script>
  const paraEl=  document.getElementById('para')

  paraEl.addEventListener('mouseover',() =>toggle(true))
  paraEl.addEventListener('mouseout',() =>toggle(false))
  function toggle(text){

    paraEl.style.color = text ? 'green': 'red'

  }

//   paraEl.addEventListener('mouseover',handleOver)
//   paraEl.addEventListener('mouseout',handleOut)

//   function handleOver(){
//     paraEl.style.color = 'red'

//   }

//   function handleOut(){
//     paraEl.style.color = 'green'

//   }
</script>
</html>





// const fib = (n) => {

  //     const fibArr = [0,1]
  
  //     for(let i = 2; i<=n; i++){
  //         fibArr.push(fibArr[i-1]+ fibArr[i-2])
  //     }
  
  //     return fibArr
  // }
  
  // console.log(fib(10))
  
  
  
  function generateFibonacciUntilValue(limit) {
      var fibonacciSeries = [0, 1];
      var nextFibonacci = 1;
      while (nextFibonacci <= limit) {
          fibonacciSeries.push(nextFibonacci);
          nextFibonacci = fibonacciSeries[fibonacciSeries.length - 1] + fibonacciSeries[fibonacciSeries.length - 2];
      }
      return fibonacciSeries;
  }
  
  // Example usage:
  var limit = 21; // Generate Fibonacci numbers until the value exceeds 21
  console.log(generateFibonacciUntilValue(limit)); // Output: [0, 1, 1, 2, 3, 5, 8, 13, 21]
  

  


function toCamel(str){

  let newStr=  str.split(' ')
     
 let uperStr = newStr.map((word,index) => {

if(index ===0){

  return word.toLowerCase()
}
else{
  return word.charAt(0).toUpperCase()+ word.slice(1).toLowerCase()
}


  } )

  return uperStr.join('')

}


console.log(toCamel('hello world hittu'))



// const fib = (n) => {

  //     const fibArr = [0,1]
  
  //     for(let i = 2; i<=n; i++){
  //         fibArr.push(fibArr[i-1]+ fibArr[i-2])
  //     }
  
  //     return fibArr
  // }
  
  // console.log(fib(10))
  
  
  
  function generateFibonacciUntilValue(limit) {
      var fibonacciSeries = [0, 1];
      var nextFibonacci = 1;
      while (nextFibonacci <= limit) {
          fibonacciSeries.push(nextFibonacci);
          nextFibonacci = fibonacciSeries[fibonacciSeries.length - 1] + fibonacciSeries[fibonacciSeries.length - 2];
      }
      return fibonacciSeries;
  }
  
  // Example usage:
  var limit = 21; // Generate Fibonacci numbers until the value exceeds 21
  console.log(generateFibonacciUntilValue(limit)); // Output: [0, 1, 1, 2, 3, 5, 8, 13, 21]
  